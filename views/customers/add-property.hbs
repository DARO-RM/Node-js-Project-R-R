<div class="card">
    <div class="card-header p-b-0">
        <div class="row">
            <div class="col-md-6">
                <h4><i class="feather icon-user-plus"></i>{{ translation.Pro_New_Property }}</h4>
                <span class="text-pink m-l-30">{{translation.Pro_Requied}}</span>
            </div>
            <div class="col-md-6 text-right">
                <a href="/customers/property">
                    <h5><i class="feather icon-arrow-left"></i> {{translation.Pro_Back_to_Property}}</h5>
                </a>
            </div>
        </div>
        <hr/>
    </div>

    <form action="" name="registration" id="registration">
    <div class="card-block">
        <div class="row">
            <div class="col-md-5">
                <div class="form-group row">
                    <label class="col-sm-12 col-form-label">{{translation.Pro_Tenant}}</label>
                    <div class="col-sm-12">
                        <select class="single_search_select select2-hidden-accessible" tabindex="-1" id="customer_id" aria-hidden="true">
                            <option value="0">{{translation.Pro_Choose_Tenant}}</option>
                           
                        </select>
                        <span class="messages"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-1"><label class="col-form-label">{{translation.Pro_or}}</label></div>
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-12 col-form-label">{{translation.Pro_Tenant_Dependent}}</label>
                    <div class="col-sm-12">
                        <select id="dependent_id"  class="single_search_select select2-hidden-accessible" tabindex="-1" aria-hidden="true">
                            <option value="0">{{translation.Pro_Choose_Tenant_Dependent}}</option>
                            
                        </select>
                        <span class="messages"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label text-danger">{{translation.Pro_Item_Name}}</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" name="item_name" id="name" placeholder="">
                <span class="messages"></span>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label text-danger">{{translation.Pro_Qty}}</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" name="qty" id="qty" placeholder="">
                <span class="messages"></span>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">{{translation.Pro_Description}}</label>
            <div class="col-sm-10">
                <textarea class="form-control" id="description"></textarea>
                <span class="messages"></span>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">{{translation.Pro_Photo}}</label>
            <div class="col-sm-10">
                <input type="file" name="files[]" id="filer_input" multiple="multiple">
                <span class="messages"></span>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2"></label>
            <div class="col-sm-10 text-right">
                <button  id="cancel" type="reset" class="btn btn-danger m-b-0">{{translation.Cancel}}</button>
                <button id="submit" type="submit" class="btn btn-inverse m-b-0">{{translation.Submit}}</button>
            </div>
        </div>
    </div>
  </form>
</div>
<script type="text/javascript">
        
$(document).ready(function(){  

append_customer();
append_dependent();
        var form = $("#registration");
          form.on("submit", function (event) {
            if(!form.valid()) {return false;}
             event.preventDefault();
                var data_ajax = {};
                data_ajax.name = $("#name").val();
                data_ajax.qty = $("#qty").val();
                data_ajax.description = $("#description").val();
                data_ajax.customer_id = $("#customer_id").find(":selected").val();
                data_ajax.dependent_id =$('#dependent_id').find(":selected").val();
                var image = $("#filer_input").val();
                data_ajax.file_data = "";
                data_ajax.file_name = ""; 
                
                
            if(image != ""){
                const image_file = document.querySelector('#filer_input').files[0];
                data_ajax.file_name = image_file.name;
                toBase64(image_file)
                .then(
                async (res)=>{
                    data_ajax.file_data =  await resizeImage(res); 
                      $.ajax({
                            url:"/api/property/add",
                            method:"POST",
                            dataType: "json",
                            data:data_ajax,
                            success:function(res){
                                
                                     new PNotify({
                                        title: 'Add success',
                                        icon: 'icofont icofont-info-circle',
                                        type: 'success',
                                        delay: 500,
                                        after_close: function(){
                                            history.pushState('/customers/property/add', '','/customers/property');
                                            location.reload(); 
                                        }
                                    });
                                
                            },
                            error:function(response){
                                alert('Server error occured')
                            }
                        }) //end ajax 
                }).catch((err)=>{alert(err)});
            }else{
                     $.ajax({
                        url:"/api/property/add",
                        method:"POST",
                        dataType: "json",
                        data:data_ajax,
                        success:function(res){
                            
                                new PNotify({
                                    title: 'Add success',
                                    icon: 'icofont icofont-info-circle',
                                    type: 'success',
                                    delay: 500,
                                    after_close: function(){
                                        history.pushState('/customers/property/add', '','/customers/property');
                                        location.reload(); 
                                    }
                                });
                           
                        },
                        error:function(response){
                            new PNotify({
                                title: 'Server Error',
                                icon: 'icofont icofont-info-circle',
                                type: 'error'
                            });
                        }
                    }) //end ajax 
            }              
        })

    

    $("#cancel").click(function(){
         history.pushState('/customers/property/add', '','/customers/property');
         location.reload(); 
    })//end cancel



 function append_customer(){
        var data = {};
        try{
         $.ajax({
            url:"/api/customers/view",
            type: 'GET',
            dataType:'json',
            data: JSON.stringify(data),
            success: function(res) {
           
                var temp = "";
                    $.each(res.rows,function(index,data){
                        temp += '<option value="'+data.customer_id+'">'+data.full_name+'</option>'      
                    })
                    $("#customer_id").append(temp);
            },
            error: function(res){
             alert('server error');
            }
         });//end ajax
        }catch (error) {
		   	console.error(error);
     	}
    } //function
 function append_dependent(){
        var data = {};
       try{ 
         $.ajax({
            url:"/api/dependent/view",
            type: 'GET',
            dataType:'json',
            data: JSON.stringify(data),
            success: function(res) {

                var temp = "";
                
                    $.each(res.rows,function(index,data){
                        temp += '<option value="'+data.dependent_id+'">'+data.full_name+'</option>'      
                    })
                    $("#dependent_id").append(temp);
              
                    //alert('Sucessfull');
            },
            error:function(res){
              alert('server error occured');
            }
         });//end ajax
        }catch (error) {
            console.error(error);
        }
    } //function

 const toBase64 = file => new Promise ((resolve, reject) => {
	    const reader = new FileReader();
	    reader.readAsDataURL(file);
	    reader.onload = () => resolve(reader.result);
	    reader.onerror = error => reject(error);
	});
 const resizeImage = (base64Str) => {
    return new Promise((resolve) => {
        let img = new Image()
        img.src = base64Str
        img.onload = () => {
        let canvas = document.createElement('canvas')
        const MAX_WIDTH = 300;
        const MAX_HEIGHT = 300;
        let width = img.width
        let height = img.height

        if (width > height) {
            if (width > MAX_WIDTH) {
            height *= MAX_WIDTH / width
            width = MAX_WIDTH
            }
        } else {
            if (height > MAX_HEIGHT) {
            width *= MAX_HEIGHT / height
            height = MAX_HEIGHT
            }
        }
        canvas.width = width
        canvas.height = height
        let ctx = canvas.getContext('2d')
        ctx.drawImage(img, 0, 0, width, height)
        resolve(canvas.toDataURL())
        }
    })
    }

    

})//end_jquery
</script>